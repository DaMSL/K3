

===============================================================================
  / - Home (welcome msg)
-------------------------------------------------------------------------------
@webapp.route('/')


===============================================================================
  /about - Display about page
-------------------------------------------------------------------------------
@webapp.route('/index')
@webapp.route('/about')


===============================================================================
  /restapi - Display complete list of API EndPoints
-------------------------------------------------------------------------------
@webapp.route('/restapi')


===============================================================================
  /log - Displays current log file
-------------------------------------------------------------------------------
@webapp.route('/log')


===============================================================================
  /trace - Debugging respose. Returns the client's HTTP request data in json
-------------------------------------------------------------------------------
@webapp.route('/trace')


===============================================================================
  /restart - Restart the K3 Dispatch Service (kills/cleans all running tasks)
-------------------------------------------------------------------------------
@webapp.route('/restart')


===============================================================================
  /kill - Kill the server  (TODO: Clean this up)
-------------------------------------------------------------------------------
@webapp.route('/kill')


===============================================================================
  /fs - File System Exposure for the local webroot folder
        Note: Direct file access via curl should include a trailing slash (/)
           Otherwise, you will get a 302 redirect to the actual file
-------------------------------------------------------------------------------
@webapp.route('/fs/<path:path>/')


===============================================================================
  /apps, /app - Application Level interface
     POST   Upload new application
       curl -i -X POST -H "Accept: application/json"
           -F file=@<filename> http://<host>:<port>/apps

     GET    Display both list of loaded apps and form to upload new ones

     /app will redirect to /apps
-------------------------------------------------------------------------------
@webapp.route('/app', methods=['GET', 'POST'])
@webapp.route('/apps', methods=['GET', 'POST'])


===============================================================================
  /apps/<appName> - Specific Application Level interface
         GET    Display all versions for given application
-------------------------------------------------------------------------------
@webapp.route('/app/<appName>')
@webapp.route('/apps/<appName>')


===============================================================================
  /apps/<appName>/<appUID> - Specific Application Level interface
         POST   (Upload archive data (C++, Source, etc....)
            curl -i -X POST -H "Accept: application/json"
                    -F "file=<filename>" http://qp1:5000/apps/<addName>/<addUID>

         GET    (TODO) Display archived files...  NotImplemented
-------------------------------------------------------------------------------
@webapp.route('/app/<appName>/<appUID>', methods=['GET', 'POST'])
@webapp.route('/apps/<appName>/<appUID>', methods=['GET', 'POST'])


===============================================================================
  /delete/app/<appName>
     POST     Deletes an app from the web server
         NOTE: Data files will remain in webroot on the server, but
           the app will be inaccessible through the interface
           (metadata is removed from the internal db)
-------------------------------------------------------------------------------
@webapp.route('/delete/app/<appName>', methods=['POST'])


===============================================================================
  /jobs - Current runtime & completed job Interface
         GET    Display currently executing & recently completed jobs
-------------------------------------------------------------------------------
@webapp.route('/job')
@webapp.route('/jobs')


===============================================================================
  /jobs/<appName>
  /jobs/<appName>/<appUID  - Launch a new K3 Job
         POST    Create new K3 Job
          curl -i -X POST -H "Accept: application/json"
             -F "file=@<rolefile>"
             -F logging=[True | False]
             -F jsonlog=[True | False]
             -F jsonfinal=[True | False]
             -F perfprofile=[True | False]
             -F http://<host>:<port>/jobs/<appName>/<appUID>
             NOTE: if appUID is omitted, job will be submitted to latest version of this app

         GET    Display job list for this application
-------------------------------------------------------------------------------
@webapp.route('/jobs/<appName>', methods=['GET', 'POST'])
@webapp.route('/jobs/<appName>/<appUID>', methods=['GET', 'POST'])


===============================================================================
  /jobs/<appName>/<jobId>/status - Detailed Job info
         GET     Display detailed job info  (default for all methods)
-------------------------------------------------------------------------------
@webapp.route('/job/<jobId>')
@webapp.route('/jobs/<appName>/<jobId>/status')


===============================================================================
  /jobs/<appName>/<appUID/replay  - Replay a previous K3 Job
         POST    Create new K3 Job
          curl -i -X POST -H "Accept: application/json" http://<host>:<port>/jobs/<appName>/<appUID>/replay
-------------------------------------------------------------------------------
@webapp.route('/job/<jobId>/replay')
@webapp.route('/jobs/<appName>/<jobId>/replay', methods=['GET', 'POST'])


===============================================================================
  /jobs/<appName>/<jobId>/archive - Endpoint to receive & archive files
         GET     returns curl command
         POST    Accept files for archiving here
           curl -i -X POST -H "Accept: application/json"
              -F file=@<filename> http://<host>:<post>/<appName>/<jobId>/archive
-------------------------------------------------------------------------------
@webapp.route('/job/<jobId>/archive', methods=['GET', 'POST'])
@webapp.route('/jobs/<appName>/<jobId>/archive', methods=['GET', 'POST'])


===============================================================================
  /jobs/<appName>/<jobId>/kill - Job Interface to cancel a job
         GET     Kills a Job (if orphaned, updates status to killed)
           curl -i -H "Accept: application/json" http://qp1:5000/jobs/<appName>/<jobId>/kill
-------------------------------------------------------------------------------
@webapp.route('/job/<jobId>/kill', methods=['GET'])
@webapp.route('/jobs/<appName>/<jobId>/kill', methods=['GET'])


===============================================================================
  /delete/jobs
         POST     Deletes list of K3 jobs
-------------------------------------------------------------------------------
@webapp.route('/delete/jobs', methods=['POST'])


===============================================================================
  /jobs/<appName>/<jobId>/stdout - Job Interface for specific job
         GET     TODO: Consolidate STDOUT for current job (from all tasks)
         POST    TODO: Accept STDOUT & append here (if desired....)
-------------------------------------------------------------------------------


===============================================================================
  /compileservice
         GET       Return compile service status
-------------------------------------------------------------------------------
@webapp.route('/compileservice')


===============================================================================
  /compileservice/check
         GET       Quick check for status
-------------------------------------------------------------------------------
@webapp.route('/compileservice/check')


===============================================================================
  /compileservice/up
        POST     Starts compile service
           curl -i -X POST -H "Accept: application/json"
                   -F numworkers=<numworkers>
                   -F gitpull=[True|False]
                   -F branch=<k3_branch>
                   -F cabalbuild=[True|False]
                   -F m_workerthread=<#master_service_threads>
                   -F w_workerthread=<#worker_service_threads>
                   -F heartbeat=<heartbeat_interval_in_secs>
                   http://<host>:<port>/compile

    Default vals:  numworkers=(max workers), gitpull=True,
                   branch=development, cabalbuild=False,
                   m_workerthread=1, w_workerthread=1,
                   heartbeat=300, cppthread=12


        GET     Redirect to Compile Form (html) or compile service setting (json)
-------------------------------------------------------------------------------
@webapp.route('/compileservice/up', methods=['GET', 'POST'])


===============================================================================
  /compileservice/stop
         GET     Stop compile service Immediately

       NOTE:  Be careful, it kills all jobs (There is no confirmation check)
-------------------------------------------------------------------------------
@webapp.route('/compileservice/stop')


===============================================================================
  /compileservice/down
         GET     Shuts down compile service gracefully

       NOTE:  Clears all pendings tasks
-------------------------------------------------------------------------------
@webapp.route('/compileservice/down')


===============================================================================
  /compile
        POST    Submit new K3 Compile task
           curl -i -X POST -H "Accept: application/json"
                   -F name=<appName>
                   -F file=@<sourceFile>
                   -F blocksize=<blocksize>
                   -F compilestage=['both'|'cpp'|'bin']
                   -F compileargs=<compile_args>
                   -F mem=<mem_in_GB>
                   -F cpu=<#cores>
                   -F workload=['balanced'|'moderate'|'moderate2'|'extreme']
                   -F user=<userName> http://<host>:<port>/compile

    NOTE:  -user & compileargs are optional.
           -If name is omitted, it is inferred from filename
    Default vals:  blocksize=8, compilestage='both', workload='balanced'

         GET     Form for compiling new K3 Executable OR status of compiling tasks
-------------------------------------------------------------------------------
@webapp.route('/compile', methods=['GET', 'POST'])


===============================================================================
  /compile/<uid>
         GET     displays STDOUT & STDERR consolidated output for compile task
-------------------------------------------------------------------------------
@webapp.route('/compile/<uid>', methods=['GET'])


===============================================================================
  /compilestatus - Short list of active jobs & current statuses
-------------------------------------------------------------------------------
@webapp.route('/compilestatus')


===============================================================================
  /compilelog - Connects User to compile log websocket
-------------------------------------------------------------------------------
@webapp.route('/compilelog')


===============================================================================
  /compile/<uid>/kill
         GET     Kills an active compiling tasks (or removes an orphaned one from DB)
-------------------------------------------------------------------------------
@webapp.route('/compile/<uid>/kill', methods=['GET'])


===============================================================================
  /delete/compiles
         POST     Deletes list of inactive compile jobs
-------------------------------------------------------------------------------
@webapp.route('/delete/compiles', methods=['POST'])
