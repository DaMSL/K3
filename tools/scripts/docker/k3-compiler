#  Dockerfile:  k3-compiler
#
#  Description:  Image for use with K3 compilation service.
#
#  Version:   GHC (7.10.1), Boost (1.57), Mesos (0.22.1), Protobuf (2.5)
#
#  Requirements:  Copy mesos libs (libmesos-<version>.so, libmesos.la) to local work dir

FROM ubuntu:15.10

ENV BOOST_VER 1.57.0
ENV BOOST_DIR boost_1_57_0

ENV MESOS_VER 0.22.1
ENV MESOS_INT_VER 0.22.1.1
ENV BLOOMBERG_VER 2.24.x

ENV CABAL_VER 1.22
ENV GHC_VER 7.10.1
ENV HAPPY_VER 1.19.5
ENV ALEX_VER 3.1.4

ENV YAML_CPP_VER 0.5.1

ENV PROTO_VER 2.5.0

ENV LD_LIBRARY_PATH /usr/local/lib:/usr/lib

ENV PATH /software/bde-tools/bin:$PATH

ENV DEBIAN_FRONTEND noninteractive

ENV K3_BRANCH development

# Install basic packages to build the image
RUN apt-get update && apt-get upgrade -y && apt-get install -y \
    bzip2 unzip autoconf libtool \
    gcc g++ clang-3.5 make cmake git curl wget subversion pkgconf \
    libyaml-cpp-dev \
    software-properties-common python-software-properties python-setuptools \
    python \
    libzmq3-dev libre2-dev pkgconf

# Install Boost
RUN wget http://sourceforge.net/projects/boost/files/boost/$BOOST_VER/$BOOST_DIR.tar.bz2/download && \
  tar --bzip2 -xvf ./download                                                                     && \
  rm download                                                                                     && \
  cd $BOOST_DIR                                                                                   && \
  ./bootstrap.sh --with-libraries=serialization,system,thread,log,program_options,filesystem --prefix=/usr/local libdir=/usr/local/lib && \
  ./b2 stage threading=multi link=shared   && \
  ./b2 install threading=multi link=shared && \
  cd ..                                    && \
  rm -Rf $BOOST_DIR

# Install Bloomberg BSL and BDL
RUN mkdir -p /software && cd /software                                         && \
    git clone https://github.com/bloomberg/bde-tools.git                       && \
    git clone https://github.com/bloomberg/bde.git                             && \
    cd bde                                                                     && \
    git checkout releases/$BLOOMBERG_VER && \
    waf configure --targets=bsl,bdl --build-type=release --library-type=shared && \
    waf build --targets=bsl,bdl --build-type=release --library-type=shared     && \
    waf install --targets=bsl,bdl                                              && \
    rm -Rf bde-tools bde

# Install CSV++
RUN cd /software                                          && \
    git clone https://git01.codeplex.com/forks/wjjt/csvpp && \
    cd csvpp                                              && \
    cmake .                                               && \
    make                                                  && \
    mv libcsvpp.so /usr/lib/                              && \
    cd ..                                                 && \
    rm -Rf csvpp

# Install libdynamic
RUN git clone https://github.com/DaMSL/libdynamic && \
    cd libdynamic                                 && \
    ./autogen.sh                                  && \
    ./configure --prefix=/usr                     && \
    make                                          && \
    make install                                  && \
    cd ..                                         && \
    rm -Rf libdynamic

# Copy in Mesos libs & include files
ADD assets/libmesos-$MESOS_VER.so /usr/lib/
ADD assets/libmesos.la /usr/lib/
ADD assets/include/mesos /usr/include/mesos/

# Install Protobuf
RUN wget https://github.com/google/protobuf/releases/download/v$PROTO_VER/protobuf-$PROTO_VER.tar.bz2 && \
  tar -xvf protobuf-$PROTO_VER.tar.bz2 && \
  rm protobuf-$PROTO_VER.tar.bz2 && \
  cd protobuf-$PROTO_VER && \
  ./autogen.sh && \
  ./configure --prefix=/usr && \
  make && \
  make check && \
  make install && \
  protoc --proto_path=/usr/include/mesos --cpp_out=/usr/include/mesos/ /usr/include/mesos/mesos.proto && \
  cd .. && \
  rm -Rf /protobuf-$PROTO_VER

# Install Mesos Eggs
RUN ln -s /usr/lib/libmesos-$MESOS_VER.so /usr/lib/libmesos.so && \
    wget http://downloads.mesosphere.io/master/ubuntu/14.04/mesos-$MESOS_VER-py2.7-linux-x86_64.egg && \
    wget https://pypi.python.org/packages/2.7/m/mesos.interface/mesos.interface-$MESOS_INT_VER-py2.7.egg && \
    easy_install mesos.interface-$MESOS_INT_VER-py2.7.egg && \
    easy_install --no-deps mesos-$MESOS_VER-py2.7-linux-x86_64.egg && \
    rm mesos.interface-$MESOS_INT_VER-py2.7.egg && \
    rm mesos-$MESOS_VER-py2.7-linux-x86_64.egg


# Install GHC and cabal
WORKDIR /
ENV LANG C.UTF-8
ENV PATH /opt/ghc/$GHC_VER/bin:/opt/cabal/$CABAL_VER/bin:/opt/alex/$ALEX_VER/bin:/opt/happy/$HAPPY_VER/bin:/root/.cabal/bin/:$PATH

RUN echo 'deb http://ppa.launchpad.net/hvr/ghc/ubuntu wily main' > /etc/apt/sources.list.d/ghc.list && \
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6F88286 && \
    apt-get update && \
    apt-get install -y --no-install-recommends zlib1g-dev cabal-install-$CABAL_VER ghc-$GHC_VER happy-$HAPPY_VER alex-$ALEX_VER && \
    rm -rf /var/lib/apt/lists/*  && \
    cabal update && \
    cabal install cabal-install -j

# Clone K3 and build
RUN mkdir -p /k3/K3 && \
    cd /k3/K3 && \
    git clone https://github.com/DaMSL/K3.git . && \
    git checkout $K3_BRANCH && \
    cabal sandbox init && \
    cabal install -j --only-dependencies --disable-documentation && \
    cabal configure --ghc-options="-rtsopts -threaded -O2" && \
    apt-get update && \
    apt-get install -y libtinfo-dev && \
    cabal build -j --ghc-options="-rtsopts -threaded -O2"

# Clean up
RUN apt-get autoremove -y && \
    apt-get autoclean -y

# Add pull script
RUN echo '#!/bin/bash' > /k3/start.sh && \
    echo 'cd /k3/K3' >> /k3/start.sh && \
    echo 'git pull && git checkout $K3_BRANCH' >> /k3/start.sh && \
    echo '$@' >> /k3/start.sh && \
    chmod +x /k3/start.sh

ENTRYPOINT ["/k3/start.sh"]

