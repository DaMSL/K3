#  Dockerfile:  k3-dev
#
#  Description:  Full development image for K3 and Mosaic
#
#  Version:   GHC (7.10.1), OCaml (4.02.1), Boost (1.57), Mesos (0.22.1), Protobuf (2.5)
#
#  Requirements:  Copy mesos libs (libmesos-<version>.so, libmesos.la) to local work dir

FROM damsl/k3-base

ENV PERFTOOLS_VER=2.4 \
    CABAL_VER=1.22 \
    GHC_VER=7.10.1 \
    HAPPY_VER=1.19.5 \
    ALEX_VER=3.1.4 \
    OPAMYES=1 \
    PGHOST=qp2 \
    PGHOSTADDR=192.168.0.11 \
    PGUSER=postgres \
    K3_BRANCH=master

# Install basic packages to build the image
RUN apt-get install -y \
    pkgconf \
    aptitude vim tmux time gdb \
    software-properties-common \
    python-software-properties python-setuptools \
    opam \
    ruby2.2 ruby2.2-dev python-dev python-pip \
    postgresql-client-9.4 libpq-dev \
    libzmq3-dev libre2-dev libunwind-dev \
    numactl libnuma-dev \
    libfreetype6-dev libpng12-dev && \
    update-alternatives \
      --install /usr/bin/ruby ruby /usr/bin/ruby2.2 50 \
      --slave /usr/bin/irb irb /usr/bin/irb2.2 \
      --slave /usr/bin/rake rake /usr/bin/rake2.2 \
      --slave /usr/bin/gem gem /usr/bin/gem2.2 \
      --slave /usr/bin/rdoc rdoc /usr/bin/rdoc2.2 \
      --slave /usr/bin/testrb testrb /usr/bin/testrb2.2 \
      --slave /usr/bin/erb erb /usr/bin/erb2.2 \
      --slave /usr/bin/ri ri /usr/bin/ri2.2 && \
    pip install pyyaml && \
    pip install flask && \
    pip install pytz && \
    pip install enum34 && \
    pip install Flask-SocketIO && \
    pip install matplotlib && \
    gem install pg && \
    opam init -a && \
    opam switch 4.02.1 && \
    eval `opam config env` && \
    opam install ocamlfind && \
    opam install yojson && \
    /bin/echo -e "\neval \`opam config env\`\n" >> /root/.bashrc && \
    /bin/echo -e "qp2:*:*:postgres:mosaic_ktrace_db\n" >> /root/.pgpass && \
    chmod 0600 /root/.pgpass

# Install perf for kernel 3.13
# Also uses libunwind
RUN apt-get install -y flex bison libelf-dev libaudit-dev libdw-dev binutils-dev && \
  wget https://github.com/torvalds/linux/archive/v3.13.tar.gz && \
  tar -xvzf v3.13.tar.gz && rm v3.13.tar.gz && \
  cd linux-3.13/tools/perf && make && make install && \
  cp perf /usr/bin && \
  cp libperf.a /usr/lib && \
  cd / && rm -Rf /linux-3.13

# Install jemalloc
RUN wget https://github.com/jemalloc/jemalloc/releases/download/$JEMALLOC_VER/jemalloc-$JEMALLOC_VER.tar.bz2 && \
  tar -xvf jemalloc-$JEMALLOC_VER.tar.bz2 && \
  rm jemalloc-$JEMALLOC_VER.tar.bz2 && \
  cd jemalloc-$JEMALLOC_VER && \
  ./autogen.sh && \
  ./configure --enable-prof --enable-prof-libunwind --prefix=/usr && \
  make && \
  make install && \
  cd .. && \
  rm -Rf /jemalloc-$JEMALLOC_VER

# Install gperftools
# To work well, perftools needs a special version of libunwind (0.99), which we don't support here. So just build with
# frame-pointer instead for profiling
RUN wget https://github.com/gperftools/gperftools/releases/download/gperftools-$PERFTOOLS_VER/gperftools-$PERFTOOLS_VER.tar.gz && \
  tar -xvf gperftools-$PERFTOOLS_VER.tar.gz && \
  rm gperftools-$PERFTOOLS_VER.tar.gz && \
  cd gperftools-$PERFTOOLS_VER && \
  ./configure --prefix=/usr && \
  make && \
  make install && \
  cd .. && \
  rm -Rf /gperftools-$PERFTOOLS_VER

# Install Mesos Eggs
RUN wget http://downloads.mesosphere.io/master/ubuntu/14.04/mesos-$MESOS_VER-py2.7-linux-x86_64.egg && \
    wget https://pypi.python.org/packages/2.7/m/mesos.interface/mesos.interface-$MESOS_INT_VER-py2.7.egg && \
    easy_install mesos.interface-$MESOS_INT_VER-py2.7.egg && \
    easy_install --no-deps mesos-$MESOS_VER-py2.7-linux-x86_64.egg && \
    rm mesos.interface-$MESOS_INT_VER-py2.7.egg && \
    rm mesos-$MESOS_VER-py2.7-linux-x86_64.egg

# Install GHC and cabal
WORKDIR /
ENV LANG=C.UTF-8 \
    PATH=/opt/ghc/$GHC_VER/bin:/opt/cabal/$CABAL_VER/bin:/opt/alex/$ALEX_VER/bin:/opt/happy/$HAPPY_VER/bin:/root/.cabal/bin/:$PATH

RUN echo 'deb http://ppa.launchpad.net/hvr/ghc/ubuntu wily main' > /etc/apt/sources.list.d/ghc.list && \
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6F88286 && \
    apt-get update && \
    apt-get install -y --no-install-recommends zlib1g-dev cabal-install-$CABAL_VER ghc-$GHC_VER happy-$HAPPY_VER alex-$ALEX_VER && \
    rm -rf /var/lib/apt/lists/*  && \
    cabal update && \
    cabal install cabal-install -j

# Install decent vim configuration
RUN mkdir -p /root/.vim/autoload && mkdir -p /root/.vim/bundle \
    cd /root/.vim && \
    curl -LSso /root/.vim/autoload/pathogen.vim https://raw.githubusercontent.com/tpope/vim-pathogen/master/autoload/pathogen.vim && \
    cd /root/.vim/bundle && \
    git clone https://github.com/tpope/vim-sensible.git; \
    git clone https://github.com/tmhedberg/matchit.git; \
    git clone https://github.com/kien/ctrlp.vim.git; \
    git clone https://github.com/tpope/vim-abolish.git; \
    git clone https://github.com/tpope/vim-surround.git; \
    git clone https://github.com/tpope/vim-unimpaired.git; \
    git clone https://github.com/tpope/vim-repeat.git; \
    git clone https://github.com/tpope/vim-vinegar.git; \
    git clone https://github.com/tpope/vim-sleuth.git; \
    git clone https://github.com/tpope/vim-eunuch.git; \
    git clone https://github.com/tpope/vim-fugitive.git; \
    git clone https://github.com/int3/vim-extradite.git; \
    git clone https://github.com/scrooloose/nerdtree.git; \
    git clone https://github.com/scrooloose/syntastic.git; \
    git clone https://github.com/godlygeek/tabular.git; \
    git clone https://github.com/kshenoy/vim-signature.git; \
    git clone https://github.com/bling/vim-airline.git; \
    git clone https://github.com/kana/vim-textobj-lastpat.git; \
    git clone https://github.com/kana/vim-textobj-user.git; \
    git clone https://github.com/kana/vim-textobj-syntax.git; \
    git clone https://github.com/kana/vim-textobj-line.git; \
    git clone https://github.com/coderifous/textobj-word-column.vim.git; \
    git clone https://github.com/bronson/vim-visual-star-search.git; \
    git clone https://github.com/justinmk/vim-sneak.git; \
    git clone https://github.com/chrisbra/NrrwRgn.git; \
    git clone https://github.com/welle/targets.vim.git; \
    git clone https://github.com/sjl/gundo.vim.git; \
    git clone https://github.com/Peeja/vim-cdo.git; \
    git clone https://github.com/tomtom/tcomment_vim.git; \
    git clone https://github.com/airblade/vim-gitgutter.git; \
    git clone https://github.com/jreybert/vimagit.git; \
    echo 'execute pathogen#infect() | syntax on | filetype plugin indent on' > /root/.vimrc; \
    cd /

# Clone K3-Mosaic from Git and build
RUN eval `opam config env` && \
    mkdir -p /k3/K3-Mosaic && \
    cd /k3/K3-Mosaic && \
    git clone https://github.com/DaMSL/K3-Mosaic.git . && \
    ./build_opt.sh && ./build_utils.sh

# Clone K3 and build
RUN mkdir -p /k3/K3 && \
    cd /k3/K3 && \
    git clone https://github.com/DaMSL/K3.git . && \
    git checkout $K3_BRANCH && \
    cabal sandbox init && \
    cabal install -j --only-dependencies --disable-documentation && \
    cabal configure --ghc-options="-rtsopts -threaded -O2" && \
    apt-get update && \
    apt-get install -y libtinfo-dev && \
    cabal build -j --ghc-options="-rtsopts -threaded -O2"

# Clean up
RUN apt-get autoremove -y && \
    apt-get autoclean -y

WORKDIR /k3/K3

