// Maps are expected to contain only records with fields key and value
annotation Map given type a,b {
  provides lifted peek    : () -> option content

  provides lifted insert  : content -> ()
  provides lifted erase  : content -> ()

  @:CArgs 2
  provides lifted update  : content -> (content -> ())
  provides lifted size : () -> int

  //lookup ignores the value of the provided element.
  provides lifted lookup : content -> option content

  @:Transformer
  provides lifted combine : self -> self

  @:Transformer
  provides lifted split   : () -> (self, self)

  @:Transformer
  provides lifted iterate : (content -> ()) -> ()

  @:Transformer
  provides lifted map     : (content -> {key: a, value: b}) -> collection {key: a, value: b} @ {Map}

  @:Transformer
  provides lifted filter  : (content -> bool) -> self

  @:{Transformer, CArgs 2}
  provides lifted fold    : (a -> (content -> a)) -> a -> a

  @:{Transformer, CArgs 3}
  provides lifted groupBy : (content -> a) -> (b -> content -> b) -> b
                             -> collection { key : a, value : b } @ {Map}

  @:Transformer
  provides lifted ext     : (content -> collection {key : a, value: b} @ {Map})
                             -> collection {key : a, value: b} @ {Map}

}
