annotation FlatPolyBuffer[variants: [labeltylit]] given type a
{
  provides lifted size : () -> int
    with effects \_ -> R[self]

  provides lifted clear : () -> ()
    with effects \_ -> [R[self]; W[self]]

  provides lifted tag_at : int -> int
    with effects \_ -> R[self]

  // Iterate and fold functions arguments are: tag, tuple index, tuple offset.
  provides lifted iterate : (int -> int -> int -> ()) -> ()
    with effects \iterF -> [R[self]; ([R[content]; (((iterF none) none) none)])*]

  // TODO: code generator attempts to turn this into a for loop if named 'fold'
  provides lifted foldl : (a -> (int -> int -> int -> a)) -> a -> a
    with effects \foldF -> \z -> [R[self]; R[z]; ([R[content]; ((((foldF z) none) none) none)])*]

  // Externalization/internalization methods.
  provides lifted repack : () -> ()
    with effects \_ -> [R[self]; W[self]]

  provides lifted unpack : () -> ()
    with effects \_ -> [R[self]; W[self]]

  provides lifted load : string -> ()
    with effects \data -> [R[self]; R[data]; W[self]]

  provides lifted save : () -> string
    with effects \data -> [R[self]; R[data]]

  // Generated methods.
  for v in variants:
    provides lifted $#[v]_at : int -> int -> $::[v]
      with effects \idx -> \offset -> [R[self]; R[idx]; R[offset]]

    provides lifted $#[v]_safe_at : int -> int -> ($::[v] -> a) -> (() -> a) -> a
      with effects \idx -> \offset -> \someF -> \noneF -> [R[self]; R[idx]; R[offset]; f none; g none]

    @:{Tag "$![v]"}
    provides lifted append_$#[v] : $::[v] -> ()
      with effects \elem -> [R[self]; R[elem]; W[self]]

}