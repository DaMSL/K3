annotation Seq given type a,b
{
  provides lifted peek    : () -> option content
    with effects \_ -> R[self]

  provides lifted insert  : content -> ()
    with effects \elem -> [R[self]; R[elem]; W[self]]

  provides lifted erase  : content -> ()
    with effects \elem -> [R[self]; R[elem]; W[self]]

  @:CArgs 2
  provides lifted update  : content -> (content -> ())
    with effects \oldElem -> \newElem -> [R[self]; R[oldElem]; R[newElem]; W[self]]

  provides lifted size : () -> int
    with effects \_ -> R[self]

  @:Transformer
  provides lifted combine : self -> self
    with effects \other -> [R[self]; R[other]]

  @:Transformer
  provides lifted split   : () -> (self, self)
    with effects \_ -> R[self]

  @:Transformer
  provides lifted iterate : (content -> ()) -> ()
    with effects \iterF -> [R[self]; ([R[content]; iterF content])*]

  @:Transformer
  provides lifted map     : (content -> a) -> collection {elem : a} @ {Seq}
    with effects \mapF -> [R[self]; ([R[content]; mapF content])*]

  @:Transformer
  provides lifted filter  : (content -> bool) -> self
    with effects \filterF -> [R[self]; ([R[content]; filterF content])*]

  @:{Transformer, CArgs 2}
  provides lifted fold    : (a -> (content -> a)) -> a -> a
    with effects \foldF -> \z -> [R[self]; R[z]; ([R[content]; ((foldF z) content)])*]

  @:{Transformer, CArgs 3}
  provides lifted groupBy : (content -> a) -> (b -> content -> b) -> b
                             -> collection { key : a, value : b } @ {Seq}
    with effects
      \gbF -> \gaccF -> \z ->
        [R[self]; R[z]; ([R[content]; gbF content; ((gaccF z) content)])*]

  @:{Transformer, CArgs 4}
  provides lifted groupByContiguous : (content -> a) -> (b -> content -> b) -> b -> int
                             -> collection { key : a, value : b } @ {Seq}
    with effects
      \gbF -> \gaccF -> \z -> \s ->
        [R[self]; R[z]; ([R[content]; gbF content; gaccF content])*]

  @:Transformer
  provides lifted ext     : (content -> collection {elem : a} @ {Seq})
                             -> collection {elem : a} @ {Seq}
    with effects \extF -> [R[self]; ([R[content]; extF content])*]

  provides lifted sort : (content -> content -> int) -> self
    with effects \sortF -> [R[self]; ([R[content]; ((sortF content) content)])*]

  provides lifted at : int -> content
    with effects \index -> [R[self]; R[index]; (R[content])*]

}
