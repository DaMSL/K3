annotation SortedSet given type a, b
{
  provides lifted peek    : () -> option content
    with effects \_ -> R[self]

  @:CArgs 2
  provides lifted peek_with : (() -> a) -> (content -> a) -> a
    with effects \f -> \g -> [R[self]; f content; g content]

  provides lifted insert  : content -> ()
    with effects \elem -> [R[self]; R[elem]; W[self]]

  provides lifted erase  : content -> ()
    with effects \elem -> [R[self]; R[elem]; W[self]]

  @:CArgs 2
  provides lifted update  : content -> (content -> ())
    with effects \oldElem -> \newElem -> [R[self]; R[oldElem]; R[newElem]; W[self]]

  provides lifted size : () -> int
    with effects \_ -> R[self]

  @:Transformer
  provides lifted combine : self -> self
    with effects \other -> [R[self]; R[other]]

  @:Transformer
  provides lifted split : () -> (self, self)
    with effects \_ -> R[self]

  @:Transformer
  provides lifted iterate : (content -> ()) -> ()
    with effects \iterF -> [R[self]; ([R[content]; iterF content])*]

  @:Transformer
  provides lifted map : (content -> a) -> collection {elem : a} @ {Set}
    with effects \mapF -> [R[self]; ([R[content]; mapF content])*]

  @:Transformer
  provides lifted filter : (content -> bool) -> self
    with effects \filterF -> [R[self]; ([R[content]; filterF content])*]

  @:{Transformer, CArgs 2}
  provides lifted fold : (a -> (content -> a)) -> a -> a
    with effects \foldF -> \z -> [R[self]; R[z]; ([R[content]; ((foldF z) content)])*]

  @:{Transformer, CArgs 3}
  provides lifted groupBy : (content -> a) -> (b -> content -> b) -> b
                             -> collection { key : a, value : b } @ {Set}
    with effects
      \gbF -> \gaccF -> \z ->
        [R[self]; R[z]; ([R[content]; gbF content; ((gaccF z) content)])*]

  @:Transformer
  provides lifted ext : (content -> collection {elem : a} @ {Set})
                         -> collection {elem : a} @ {Set}
    with effects \extF -> [R[self]; ([R[content]; extF content])*]

  @:{Transformer, CArgs 3}
  provides lifted sample : (a -> content -> a) -> a -> int -> a
    with effects \sampleF -> \z -> \ns -> [R[self]; R[z]; R[ns]; ([R[content]; (sampleF z) content])*]

  // Set operations.
  provides lifted member : content -> bool
    with effects \elem -> [R[self]; R[elem]]

  provides lifted isSubsetOf : self -> bool
    with effects \other -> [R[self]; R[other]]

  provides lifted union : self -> self
    with effects \other -> [R[self]; R[other]]

  provides lifted intersect : self -> self
    with effects \other -> [R[self]; R[other]]

  provides lifted difference : self -> self
    with effects \other -> [R[self]; R[other]]

  // Point retrieval based on sort order.
  provides lifted min : () -> option content
    with effects \_ -> R[self]

  provides lifted max : () -> option content
    with effects \_ -> R[self]

  provides lifted min_with : (content -> ()) -> ()
    with effects \lookupF -> [R[self]; lookupF content]

  provides lifted max_with : (content -> ()) -> ()
    with effects \lookupF -> [R[self]; lookupF content]

  provides lifted lower_bound : content -> option content
    with effects \elem -> [R[self]; R[elem]]

  provides lifted upper_bound : content -> option content
    with effects \elem -> [R[self]; R[elem]]

  // Range retrieval based on sort order.
  provides lifted filter_lt : content -> self
    with effects \elem -> [R[self]; R[elem]]

  provides lifted filter_gt : content -> self
    with effects \elem -> [R[self]; R[elem]]

  provides lifted filter_geq : content -> self
    with effects \elem -> [R[self]; R[elem]]

  provides lifted filter_leq : content -> self
    with effects \elem -> [R[self]; R[elem]]

  provides lifted between : content -> (content -> self)
    with effects \elem -> [R[self]; R[elem]]

  // Range-based modification.

  // Erases all elements less than, but not including, the given key.
  provides lifted erase_prefix : content -> ()
    with effects \elem -> [R[self]; R[elem]; W[self]]

  // Erases all elements greater than the given key.
  provides lifted erase_suffix : content -> ()
    with effects \elem -> [R[self]; R[elem]; W[self]]
}
