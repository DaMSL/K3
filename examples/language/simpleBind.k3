declare a : ind mut int = ind mut 5
declare a2 : ind mut int = ind mut 10
declare b : (mut int, mut int) = (mut 1, mut 2)
declare c : {ca: mut int, cb: {cba: mut int, cbb: mut int} } = {ca: 10, cb: {cba: 11, cbb: 12}}

declare f : () -> ind mut int = \_ -> a
declare g : () -> (mut int, mut int) = \_ -> b

trigger t : int = \x -> (
  if x == 0 then ()
  else (
    (bind (bind a as ind y in ind 1) as ind z in (
      z = (bind a as ind u in 3)
    ));
    (bind (if true then a else a2) as ind y in (
      y = x
    ));
    (bind b as (m, n) in (
      m = x;
      n = x + 1
    ));
    (bind c.cb as {cba:m} in (
      m = 20
    ));
    (bind f() as ind z in (
      z = 200
    ));
    (bind g() as (m, n) in (
      m = 576;
      n = 421
    ));
    (t, me) <- 0
  ) 
)

source s1 : int = value 100
feed s1 |> t
