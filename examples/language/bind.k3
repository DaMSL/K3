declare a : ind mut int = ind mut 5
declare b : (mut int, mut bool) = (mut 7, mut false) 
declare c : { m : mut int, n : mut bool } = { m:9, n:false }
declare d : { d_a : mut int, d_b : mut { db_c : mut int, db_d : mut int} } = { d_a:5, d_b:mut { db_c:mut 100, db_d:mut 1000} }

trigger t : int = \x -> (
  // Record field assignment does not currently work in the interpreter
  // and is not supported by the typechecking spec.
  // The parser does currently desugar this into the correct nested bind form.
  // d.d_b.db_d = x

  bind a as ind y in (
    y = x
  );
  bind b as (u,v) in (
    u = x;
    v = true
  );
  bind c as {m:s,n:t} in (
    s = x;
    t = true
  )
)

source s1 : int = value 100
feed s1 |> t
