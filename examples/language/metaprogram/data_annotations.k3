// K3 provides three kinds of splice targets in annotations:
// i.   labels, syntax: '#[param]'
// ii.  types,  syntax: '::[param]'
// iii. expressions, syntax: '$[param]'
// The example below shows that label splices are automatically concatenated
// if multiple splices are provided.
// Type and expression splices cannot be composed.
//
//
annotation Index[key,value,customLabel] {
  provides lookup_by_#[key]_#[customLabel] : ::[key] -> ::[value]
}

// Splice parameters are specified as keyword arguments.
// By default, parameters are assumed to be record fields,
// and enable label and type splicing in an annotation.
//
//
declare employees : collection {id: int, name: string}
                      @Index(key=id,value=name, label customLabel=foo)

// Splice parameters can also be explicitly constructed as
// either a 'label', 'type', or 'expr'. For example, below
// we provide a record field splice for the 'key' parameter
// and only a type expression for type splicing of the 'value'
// parameter. For the latter case, the parameter can only be
// used to splice in a suitable type position.
//
//
declare employees2 : collection {id: int, name: string, age : int}
                       @Index(key=id, type value={name:string, age:int}, label customLabel=bar)
