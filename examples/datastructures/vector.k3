include "Annotation/Vector.k3"
include "Core/Builtins.k3"

declare c : collection {elem: int} @Vector
declare d : collection {elem: bool} @Vector
declare e : collection {i: bool} @Vector
declare f : mut int = 0

trigger t : () = \_ -> (
  (range 10).iterate (\r -> c.insert {elem: r.elem});
  print ("Initial size: " ++ (itos (c.size())));

  c.unsafe_at 3 (\r -> print ("unsafe_at elem@3: " ++ (itos r.elem)));
  (print ("erase_at elem@3: " ++ (itos (c.erase_at 3).elem)));

  (range 10).iterate (\r -> d.insert {elem: r.elem > 5});
  print ("d size: " ++ (itos (d.size())));

  (range 10).iterate (\r -> d.insert_at r.elem {elem: r.elem > 5});
  print ("d size 2: " ++ (itos (d.size())));

  (range 10).iterate (\r -> d.update_at r.elem (\_ -> {elem: false}));
  print ("d size 3: " ++ (itos (d.size())));

  (f = d.fold (\acc -> \i -> if i.elem then acc + 1 else acc) 0);
  print ("f: " ++ (itos f));

  (range 10).iterate (\r -> e.insert {i: r.elem > 5});
  print ("e size: " ++ (itos (e.size())))
)

source s1 : () = value ()
feed s1 |> t
