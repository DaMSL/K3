include "Core/Builtins.k3"
include "Annotation/Seq.k3"

declare randInt : mut int = 0
declare randReal : mut real = 0.0
declare modInt : mut int = 0
declare modReal : mut int = 0
declare rangeC : mut collection {i : int} @ {Seq} = empty {i:int} @ {Seq}
declare sumC : mut int = 0
declare sortC : mut collection {i : int} @ {Seq} = {|i:int| 4,3,2 |} @ {Seq}
declare hashC : mut int = 0
declare hashS : mut int = 0
declare hashO : mut int = 0
declare testString : mut string = "Hello World!"

trigger t : () = \_ -> (
	randInt = random 5;	
	randReal = randomFraction ();
	modInt = 100 % 3;
	modReal = 101.0 % 5.0;
	rangeC = range 10;
	sumC = rangeC.fold (\acc -> (\x -> acc + x.i)) 0;
	sortC = sortC.sort (\a -> (\b -> a.i - b.i));
	hashC = hash sortC;
	hashS = hash "K3 hashing works";
	hashO = hash {x : \y -> y + 1};
	//testString = substring 4 testString
	print "Hello"	
)

source s1 : () = value ()
feed s1 |> t
