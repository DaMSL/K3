INIT 127.0.0.1:40000 {
  Value: ()
  Environment:
  allMappersDone              => False
  args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
  atExit                      => <function>
  atInit                      => <function>
  close                       => <function>
  count                       => 0
  count1                      => 0
  count2                      => 0
  count3                      => 0
  countTest                   => 0
  currNumShufflers            => 0
  currNumWords                => 0
  currentNodes                => 0
  done                        => False
  finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  goProcess                   => <function>
  initDecls                   => <function>
  join                        => <trigger join >
  localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                              .. per=127.0.0.1:53000}],Collection}
  master                      => 127.0.0.1:40000
  me                          => 127.0.0.1:40000
  numOfShufflers              => 3
  numOfWords                  => 5
  openBuiltin                 => <function>
  openFile                    => <function>
  openSocket                  => <function>
  parseArgs                   => <function>
  peers                       => {CNS={},ANS={},DS=[],}
  processRole                 => <function>
  reduce                      => <trigger reduce >
  reducer                     => 127.0.0.1:70000
  register                    => <trigger register >
  registerFileCloseTrigger    => <function>
  registerFileDataTrigger     => <function>
  registerSocketAcceptTrigger => <function>
  registerSocketCloseTrigger  => <function>
  registerSocketDataTrigger   => <function>
  role                        => "go"
  shuffle1                    => <trigger shuffle1 >
  shuffle2                    => <trigger shuffle2 >
  shuffle3                    => <trigger shuffle3 >
  shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                              .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                              .. n}
  splitWordLst                => <trigger splitWordLst >
  test                        => 0
  totalNodes                  => 8
  wordMap                     => <trigger wordMap >
  wordTest                    => "init"
  wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                              .. ord="bar"}],Collection}
  wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
  wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
  wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
}

INIT 127.0.0.1:51000 {
  Value: ()
  Environment:
  allMappersDone              => False
  args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
  atExit                      => <function>
  atInit                      => <function>
  close                       => <function>
  count                       => 0
  count1                      => 0
  count2                      => 0
  count3                      => 0
  countTest                   => 0
  currNumShufflers            => 0
  currNumWords                => 0
  currentNodes                => 0
  done                        => False
  finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  goProcess                   => <function>
  initDecls                   => <function>
  join                        => <trigger join >
  localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                              .. per=127.0.0.1:53000}],Collection}
  master                      => 127.0.0.1:40000
  me                          => 127.0.0.1:51000
  numOfShufflers              => 3
  numOfWords                  => 5
  openBuiltin                 => <function>
  openFile                    => <function>
  openSocket                  => <function>
  parseArgs                   => <function>
  peers                       => {CNS={},ANS={},DS=[],}
  processRole                 => <function>
  reduce                      => <trigger reduce >
  reducer                     => 127.0.0.1:70000
  register                    => <trigger register >
  registerFileCloseTrigger    => <function>
  registerFileDataTrigger     => <function>
  registerSocketAcceptTrigger => <function>
  registerSocketCloseTrigger  => <function>
  registerSocketDataTrigger   => <function>
  role                        => "go"
  shuffle1                    => <trigger shuffle1 >
  shuffle2                    => <trigger shuffle2 >
  shuffle3                    => <trigger shuffle3 >
  shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                              .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                              .. n}
  splitWordLst                => <trigger splitWordLst >
  test                        => 0
  totalNodes                  => 8
  wordMap                     => <trigger wordMap >
  wordTest                    => "init"
  wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                              .. ord="bar"}],Collection}
  wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
  wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
  wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
}

INIT 127.0.0.1:52000 {
  Value: ()
  Environment:
  allMappersDone              => False
  args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
  atExit                      => <function>
  atInit                      => <function>
  close                       => <function>
  count                       => 0
  count1                      => 0
  count2                      => 0
  count3                      => 0
  countTest                   => 0
  currNumShufflers            => 0
  currNumWords                => 0
  currentNodes                => 0
  done                        => False
  finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  goProcess                   => <function>
  initDecls                   => <function>
  join                        => <trigger join >
  localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                              .. per=127.0.0.1:53000}],Collection}
  master                      => 127.0.0.1:40000
  me                          => 127.0.0.1:52000
  numOfShufflers              => 3
  numOfWords                  => 5
  openBuiltin                 => <function>
  openFile                    => <function>
  openSocket                  => <function>
  parseArgs                   => <function>
  peers                       => {CNS={},ANS={},DS=[],}
  processRole                 => <function>
  reduce                      => <trigger reduce >
  reducer                     => 127.0.0.1:70000
  register                    => <trigger register >
  registerFileCloseTrigger    => <function>
  registerFileDataTrigger     => <function>
  registerSocketAcceptTrigger => <function>
  registerSocketCloseTrigger  => <function>
  registerSocketDataTrigger   => <function>
  role                        => "go"
  shuffle1                    => <trigger shuffle1 >
  shuffle2                    => <trigger shuffle2 >
  shuffle3                    => <trigger shuffle3 >
  shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                              .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                              .. n}
  splitWordLst                => <trigger splitWordLst >
  test                        => 0
  totalNodes                  => 8
  wordMap                     => <trigger wordMap >
  wordTest                    => "init"
  wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                              .. ord="bar"}],Collection}
  wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
  wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
  wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
}

INIT 127.0.0.1:53000 {
  Value: ()
  Environment:
  allMappersDone              => False
  args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
  atExit                      => <function>
  atInit                      => <function>
  close                       => <function>
  count                       => 0
  count1                      => 0
  count2                      => 0
  count3                      => 0
  countTest                   => 0
  currNumShufflers            => 0
  currNumWords                => 0
  currentNodes                => 0
  done                        => False
  finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  goProcess                   => <function>
  initDecls                   => <function>
  join                        => <trigger join >
  localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                              .. per=127.0.0.1:53000}],Collection}
  master                      => 127.0.0.1:40000
  me                          => 127.0.0.1:53000
  numOfShufflers              => 3
  numOfWords                  => 5
  openBuiltin                 => <function>
  openFile                    => <function>
  openSocket                  => <function>
  parseArgs                   => <function>
  peers                       => {CNS={},ANS={},DS=[],}
  processRole                 => <function>
  reduce                      => <trigger reduce >
  reducer                     => 127.0.0.1:70000
  register                    => <trigger register >
  registerFileCloseTrigger    => <function>
  registerFileDataTrigger     => <function>
  registerSocketAcceptTrigger => <function>
  registerSocketCloseTrigger  => <function>
  registerSocketDataTrigger   => <function>
  role                        => "go"
  shuffle1                    => <trigger shuffle1 >
  shuffle2                    => <trigger shuffle2 >
  shuffle3                    => <trigger shuffle3 >
  shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                              .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                              .. n}
  splitWordLst                => <trigger splitWordLst >
  test                        => 0
  totalNodes                  => 8
  wordMap                     => <trigger wordMap >
  wordTest                    => "init"
  wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                              .. ord="bar"}],Collection}
  wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
  wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
  wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
}

INIT 127.0.0.1:61000 {
  Value: ()
  Environment:
  allMappersDone              => False
  args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
  atExit                      => <function>
  atInit                      => <function>
  close                       => <function>
  count                       => 0
  count1                      => 0
  count2                      => 0
  count3                      => 0
  countTest                   => 0
  currNumShufflers            => 0
  currNumWords                => 0
  currentNodes                => 0
  done                        => False
  finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  goProcess                   => <function>
  initDecls                   => <function>
  join                        => <trigger join >
  localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                              .. per=127.0.0.1:53000}],Collection}
  master                      => 127.0.0.1:40000
  me                          => 127.0.0.1:61000
  numOfShufflers              => 3
  numOfWords                  => 5
  openBuiltin                 => <function>
  openFile                    => <function>
  openSocket                  => <function>
  parseArgs                   => <function>
  peers                       => {CNS={},ANS={},DS=[],}
  processRole                 => <function>
  reduce                      => <trigger reduce >
  reducer                     => 127.0.0.1:70000
  register                    => <trigger register >
  registerFileCloseTrigger    => <function>
  registerFileDataTrigger     => <function>
  registerSocketAcceptTrigger => <function>
  registerSocketCloseTrigger  => <function>
  registerSocketDataTrigger   => <function>
  role                        => "go"
  shuffle1                    => <trigger shuffle1 >
  shuffle2                    => <trigger shuffle2 >
  shuffle3                    => <trigger shuffle3 >
  shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                              .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                              .. n}
  splitWordLst                => <trigger splitWordLst >
  test                        => 0
  totalNodes                  => 8
  wordMap                     => <trigger wordMap >
  wordTest                    => "init"
  wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                              .. ord="bar"}],Collection}
  wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
  wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
  wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
}

INIT 127.0.0.1:62000 {
  Value: ()
  Environment:
  allMappersDone              => False
  args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
  atExit                      => <function>
  atInit                      => <function>
  close                       => <function>
  count                       => 0
  count1                      => 0
  count2                      => 0
  count3                      => 0
  countTest                   => 0
  currNumShufflers            => 0
  currNumWords                => 0
  currentNodes                => 0
  done                        => False
  finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  goProcess                   => <function>
  initDecls                   => <function>
  join                        => <trigger join >
  localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                              .. per=127.0.0.1:53000}],Collection}
  master                      => 127.0.0.1:40000
  me                          => 127.0.0.1:62000
  numOfShufflers              => 3
  numOfWords                  => 5
  openBuiltin                 => <function>
  openFile                    => <function>
  openSocket                  => <function>
  parseArgs                   => <function>
  peers                       => {CNS={},ANS={},DS=[],}
  processRole                 => <function>
  reduce                      => <trigger reduce >
  reducer                     => 127.0.0.1:70000
  register                    => <trigger register >
  registerFileCloseTrigger    => <function>
  registerFileDataTrigger     => <function>
  registerSocketAcceptTrigger => <function>
  registerSocketCloseTrigger  => <function>
  registerSocketDataTrigger   => <function>
  role                        => "go"
  shuffle1                    => <trigger shuffle1 >
  shuffle2                    => <trigger shuffle2 >
  shuffle3                    => <trigger shuffle3 >
  shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                              .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                              .. n}
  splitWordLst                => <trigger splitWordLst >
  test                        => 0
  totalNodes                  => 8
  wordMap                     => <trigger wordMap >
  wordTest                    => "init"
  wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                              .. ord="bar"}],Collection}
  wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
  wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
  wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
}

INIT 127.0.0.1:63000 {
  Value: ()
  Environment:
  allMappersDone              => False
  args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
  atExit                      => <function>
  atInit                      => <function>
  close                       => <function>
  count                       => 0
  count1                      => 0
  count2                      => 0
  count3                      => 0
  countTest                   => 0
  currNumShufflers            => 0
  currNumWords                => 0
  currentNodes                => 0
  done                        => False
  finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  goProcess                   => <function>
  initDecls                   => <function>
  join                        => <trigger join >
  localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                              .. per=127.0.0.1:53000}],Collection}
  master                      => 127.0.0.1:40000
  me                          => 127.0.0.1:63000
  numOfShufflers              => 3
  numOfWords                  => 5
  openBuiltin                 => <function>
  openFile                    => <function>
  openSocket                  => <function>
  parseArgs                   => <function>
  peers                       => {CNS={},ANS={},DS=[],}
  processRole                 => <function>
  reduce                      => <trigger reduce >
  reducer                     => 127.0.0.1:70000
  register                    => <trigger register >
  registerFileCloseTrigger    => <function>
  registerFileDataTrigger     => <function>
  registerSocketAcceptTrigger => <function>
  registerSocketCloseTrigger  => <function>
  registerSocketDataTrigger   => <function>
  role                        => "go"
  shuffle1                    => <trigger shuffle1 >
  shuffle2                    => <trigger shuffle2 >
  shuffle3                    => <trigger shuffle3 >
  shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                              .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                              .. n}
  splitWordLst                => <trigger splitWordLst >
  test                        => 0
  totalNodes                  => 8
  wordMap                     => <trigger wordMap >
  wordTest                    => "init"
  wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                              .. ord="bar"}],Collection}
  wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
  wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
  wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
}

INIT 127.0.0.1:70000 {
  Value: ()
  Environment:
  allMappersDone              => False
  args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
  atExit                      => <function>
  atInit                      => <function>
  close                       => <function>
  count                       => 0
  count1                      => 0
  count2                      => 0
  count3                      => 0
  countTest                   => 0
  currNumShufflers            => 0
  currNumWords                => 0
  currentNodes                => 0
  done                        => False
  finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  goProcess                   => <function>
  initDecls                   => <function>
  join                        => <trigger join >
  localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[],Collection}
  mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                              .. per=127.0.0.1:53000}],Collection}
  master                      => 127.0.0.1:40000
  me                          => 127.0.0.1:70000
  numOfShufflers              => 3
  numOfWords                  => 5
  openBuiltin                 => <function>
  openFile                    => <function>
  openSocket                  => <function>
  parseArgs                   => <function>
  peers                       => {CNS={},ANS={},DS=[],}
  processRole                 => <function>
  reduce                      => <trigger reduce >
  reducer                     => 127.0.0.1:70000
  register                    => <trigger register >
  registerFileCloseTrigger    => <function>
  registerFileDataTrigger     => <function>
  registerSocketAcceptTrigger => <function>
  registerSocketCloseTrigger  => <function>
  registerSocketDataTrigger   => <function>
  role                        => "go"
  shuffle1                    => <trigger shuffle1 >
  shuffle2                    => <trigger shuffle2 >
  shuffle3                    => <trigger shuffle3 >
  shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                              .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                              .. n}
  splitWordLst                => <trigger splitWordLst >
  test                        => 0
  totalNodes                  => 8
  wordMap                     => <trigger wordMap >
  wordTest                    => "init"
  wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                              .. ord="bar"}],Collection}
  wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
  wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
  wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                              .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                              .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                              .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[("join",VTuple [])]),(127.0.0.1:51000,[("join",VTuple [])]),(127.0.0.1:53000,[("join",VTuple [])]),(127.0.0.1:63000,[("join",VTuple [])]),(127.0.0.1:70000,[("join",VTuple [])]),(127.0.0.1:40000,[("join",VTuple [])]),(127.0.0.1:52000,[("join",VTuple [])]),(127.0.0.1:62000,[("join",VTuple [])])]
}


TRIGGER join 127.0.0.1:61000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:61000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[("join",VTuple [])]),(127.0.0.1:53000,[("join",VTuple [])]),(127.0.0.1:63000,[("join",VTuple [])]),(127.0.0.1:70000,[("join",VTuple [])]),(127.0.0.1:40000,[("join",VTuple []),("register",VTuple [])]),(127.0.0.1:52000,[("join",VTuple [])]),(127.0.0.1:62000,[("join",VTuple [])])]
}


TRIGGER join 127.0.0.1:51000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:51000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[("join",VTuple [])]),(127.0.0.1:63000,[("join",VTuple [])]),(127.0.0.1:70000,[("join",VTuple [])]),(127.0.0.1:40000,[("join",VTuple []),("register",VTuple []),("register",VTuple [])]),(127.0.0.1:52000,[("join",VTuple [])]),(127.0.0.1:62000,[("join",VTuple [])])]
}


TRIGGER join 127.0.0.1:53000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:53000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[("join",VTuple [])]),(127.0.0.1:70000,[("join",VTuple [])]),(127.0.0.1:40000,[("join",VTuple []),("register",VTuple []),("register",VTuple []),("register",VTuple [])]),(127.0.0.1:52000,[("join",VTuple [])]),(127.0.0.1:62000,[("join",VTuple [])])]
}


TRIGGER join 127.0.0.1:63000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:63000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[("join",VTuple [])]),(127.0.0.1:40000,[("join",VTuple []),("register",VTuple []),("register",VTuple []),("register",VTuple []),("register",VTuple [])]),(127.0.0.1:52000,[("join",VTuple [])]),(127.0.0.1:62000,[("join",VTuple [])])]
}


TRIGGER join 127.0.0.1:70000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:70000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[("join",VTuple []),("register",VTuple []),("register",VTuple []),("register",VTuple []),("register",VTuple []),("register",VTuple [])]),(127.0.0.1:52000,[("join",VTuple [])]),(127.0.0.1:62000,[("join",VTuple [])])]
}


TRIGGER join 127.0.0.1:40000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:40000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[("register",VTuple []),("register",VTuple []),("register",VTuple []),("register",VTuple []),("register",VTuple []),("register",VTuple [])]),(127.0.0.1:52000,[("join",VTuple [])]),(127.0.0.1:62000,[("join",VTuple [])])]
}


TRIGGER register 127.0.0.1:40000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:40000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[("register",VTuple []),("register",VTuple []),("register",VTuple []),("register",VTuple []),("register",VTuple [])]),(127.0.0.1:52000,[("join",VTuple [])]),(127.0.0.1:62000,[("join",VTuple [])])]
}


TRIGGER register 127.0.0.1:40000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 1
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:40000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[("register",VTuple []),("register",VTuple []),("register",VTuple []),("register",VTuple [])]),(127.0.0.1:52000,[("join",VTuple [])]),(127.0.0.1:62000,[("join",VTuple [])])]
}


TRIGGER register 127.0.0.1:40000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 2
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:40000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[("register",VTuple []),("register",VTuple []),("register",VTuple [])]),(127.0.0.1:52000,[("join",VTuple [])]),(127.0.0.1:62000,[("join",VTuple [])])]
}


TRIGGER register 127.0.0.1:40000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 3
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:40000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[("register",VTuple []),("register",VTuple [])]),(127.0.0.1:52000,[("join",VTuple [])]),(127.0.0.1:62000,[("join",VTuple [])])]
}


TRIGGER register 127.0.0.1:40000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 4
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:40000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[("register",VTuple [])]),(127.0.0.1:52000,[("join",VTuple [])]),(127.0.0.1:62000,[("join",VTuple [])])]
}


TRIGGER register 127.0.0.1:40000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 5
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:40000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[("join",VTuple [])]),(127.0.0.1:62000,[("join",VTuple [])])]
}


TRIGGER join 127.0.0.1:52000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:52000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[("register",VTuple [])]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[("join",VTuple [])])]
}


TRIGGER register 127.0.0.1:40000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 6
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:40000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[("join",VTuple [])])]
}


TRIGGER join 127.0.0.1:62000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:62000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[("register",VTuple [])]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[])]
}


TRIGGER register 127.0.0.1:40000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 7
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:40000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[("splitWordLst",VTuple [])]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[])]
}


TRIGGER splitWordLst 127.0.0.1:40000 {
  Args: ()
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 8
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:40000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[("wordMap",VCollection <opaque>)]),(127.0.0.1:53000,[("wordMap",VCollection <opaque>)]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[("wordMap",VCollection <opaque>)]),(127.0.0.1:62000,[])]
}


TRIGGER wordMap 127.0.0.1:51000 {
  Args: {CNS={peek=<function>,insert=<function>,delete=<function>,update=<function>,combine=<function>,split=<function>,iterate=<function>,map=<function>,filter=<function>,fold=<function>,groupBy=<function>,ext=<function>},ANS={},DS=[{word="foo"},{word="bar"}],Collection}
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:51000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[("shuffle1",VString "word"),("shuffle1",VString "none")]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[("wordMap",VCollection <opaque>)]),(127.0.0.1:63000,[("shuffle3",VString "none"),("shuffle3",VString "none")]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[("wordMap",VCollection <opaque>)]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "word")])]
}


TRIGGER shuffle1 127.0.0.1:61000 {
  Args: "word"
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:61000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[("shuffle1",VString "none")]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[("wordMap",VCollection <opaque>)]),(127.0.0.1:63000,[("shuffle3",VString "none"),("shuffle3",VString "none")]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[("wordMap",VCollection <opaque>)]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "word")])]
}


TRIGGER shuffle1 127.0.0.1:61000 {
  Args: "none"
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 1
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 1
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:61000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=1}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[("wordMap",VCollection <opaque>)]),(127.0.0.1:63000,[("shuffle3",VString "none"),("shuffle3",VString "none")]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[("wordMap",VCollection <opaque>)]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "word")])]
}


TRIGGER wordMap 127.0.0.1:53000 {
  Args: {CNS={peek=<function>,insert=<function>,delete=<function>,update=<function>,combine=<function>,split=<function>,iterate=<function>,map=<function>,filter=<function>,fold=<function>,groupBy=<function>,ext=<function>},ANS={},DS=[{word="bar"}],Collection}
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:53000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[("shuffle1",VString "none")]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[("shuffle3",VString "none"),("shuffle3",VString "none"),("shuffle3",VString "none")]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[("wordMap",VCollection <opaque>)]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "word"),("shuffle2",VString "word")])]
}


TRIGGER shuffle1 127.0.0.1:61000 {
  Args: "none"
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 1
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 2
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:61000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=1}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[("shuffle3",VString "none"),("shuffle3",VString "none"),("shuffle3",VString "none")]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[("wordMap",VCollection <opaque>)]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "word"),("shuffle2",VString "word")])]
}


TRIGGER shuffle3 127.0.0.1:63000 {
  Args: "none"
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:63000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[("shuffle3",VString "none"),("shuffle3",VString "none")]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[("wordMap",VCollection <opaque>)]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "word"),("shuffle2",VString "word")])]
}


TRIGGER shuffle3 127.0.0.1:63000 {
  Args: "none"
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 1
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:63000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[("shuffle3",VString "none")]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[("wordMap",VCollection <opaque>)]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "word"),("shuffle2",VString "word")])]
}


TRIGGER shuffle3 127.0.0.1:63000 {
  Args: "none"
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 2
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:63000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[("wordMap",VCollection <opaque>)]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "word"),("shuffle2",VString "word")])]
}


TRIGGER wordMap 127.0.0.1:52000 {
  Args: {CNS={peek=<function>,insert=<function>,delete=<function>,update=<function>,combine=<function>,split=<function>,iterate=<function>,map=<function>,filter=<function>,fold=<function>,groupBy=<function>,ext=<function>},ANS={},DS=[{word="baz"},{word="foo"}],Collection}
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:52000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[("shuffle1",VString "none"),("shuffle1",VString "word")]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[("shuffle3",VString "word"),("shuffle3",VString "none")]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "word"),("shuffle2",VString "word"),("shuffle2",VString "none"),("shuffle2",VString "none")])]
}


TRIGGER shuffle1 127.0.0.1:61000 {
  Args: "none"
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 1
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 3
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:61000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=1}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[("shuffle1",VString "word")]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[("shuffle3",VString "word"),("shuffle3",VString "none")]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "word"),("shuffle2",VString "word"),("shuffle2",VString "none"),("shuffle2",VString "none")])]
}


TRIGGER shuffle1 127.0.0.1:61000 {
  Args: "word"
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 1
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 4
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:61000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=1}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[("shuffle3",VString "word"),("shuffle3",VString "none")]),(127.0.0.1:70000,[("reduce",VCollection <opaque>)]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "word"),("shuffle2",VString "word"),("shuffle2",VString "none"),("shuffle2",VString "none")])]
}


TRIGGER shuffle3 127.0.0.1:63000 {
  Args: "word"
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 3
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:63000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[("shuffle3",VString "none")]),(127.0.0.1:70000,[("reduce",VCollection <opaque>)]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "word"),("shuffle2",VString "word"),("shuffle2",VString "none"),("shuffle2",VString "none")])]
}


TRIGGER shuffle3 127.0.0.1:63000 {
  Args: "none"
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 1
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 4
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:63000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=1}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[("reduce",VCollection <opaque>),("reduce",VCollection <opaque>)]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "word"),("shuffle2",VString "word"),("shuffle2",VString "none"),("shuffle2",VString "none")])]
}


TRIGGER reduce 127.0.0.1:70000 {
  Args: {CNS={peek=<function>,insert=<function>,delete=<function>,update=<function>,combine=<function>,split=<function>,iterate=<function>,map=<function>,filter=<function>,fold=<function>,groupBy=<function>,ext=<function>},ANS={},DS=[{word="foo",count=2}],Collection}
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:70000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[("reduce",VCollection <opaque>)]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "word"),("shuffle2",VString "word"),("shuffle2",VString "none"),("shuffle2",VString "none")])]
}


TRIGGER reduce 127.0.0.1:70000 {
  Args: {CNS={peek=<function>,insert=<function>,delete=<function>,update=<function>,combine=<function>,split=<function>,iterate=<function>,map=<function>,filter=<function>,fold=<function>,groupBy=<function>,ext=<function>},ANS={},DS=[{word="baz",count=1}],Collection}
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 2
    currNumShufflers            => 1
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=2}],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:70000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "foo"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "word"),("shuffle2",VString "word"),("shuffle2",VString "none"),("shuffle2",VString "none")])]
}


TRIGGER shuffle2 127.0.0.1:62000 {
  Args: "none"
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:62000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[("shuffle2",VString "word"),("shuffle2",VString "word"),("shuffle2",VString "none"),("shuffle2",VString "none")])]
}


TRIGGER shuffle2 127.0.0.1:62000 {
  Args: "word"
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 1
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:62000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[("shuffle2",VString "word"),("shuffle2",VString "none"),("shuffle2",VString "none")])]
}


TRIGGER shuffle2 127.0.0.1:62000 {
  Args: "word"
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 1
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 2
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:62000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=1}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[("shuffle2",VString "none"),("shuffle2",VString "none")])]
}


TRIGGER shuffle2 127.0.0.1:62000 {
  Args: "none"
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 2
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 3
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:62000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=2}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[("shuffle2",VString "none")])]
}


TRIGGER shuffle2 127.0.0.1:62000 {
  Args: "none"
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 2
    count3                      => 0
    countTest                   => 0
    currNumShufflers            => 0
    currNumWords                => 4
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:62000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "init"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=2}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[("reduce",VCollection <opaque>)]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[])]
}


TRIGGER reduce 127.0.0.1:70000 {
  Args: {CNS={peek=<function>,insert=<function>,delete=<function>,update=<function>,combine=<function>,split=<function>,iterate=<function>,map=<function>,filter=<function>,fold=<function>,groupBy=<function>,ext=<function>},ANS={},DS=[{word="bar",count=2}],Collection}
  BEFORE {
    Value: ()
    Environment:
    allMappersDone              => False
    args                        => ({CNS={},ANS={},DS=[],},{CNS={},ANS={},DS=[],})
    atExit                      => <function>
    atInit                      => <function>
    close                       => <function>
    count                       => 0
    count1                      => 0
    count2                      => 0
    count3                      => 0
    countTest                   => 2
    currNumShufflers            => 2
    currNumWords                => 0
    currentNodes                => 0
    done                        => False
    finalWordsMap               => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=2},{word="baz",count=1}],Collection}
    goProcess                   => <function>
    initDecls                   => <function>
    join                        => <trigger join >
    localLst                    => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst1                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst2                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mapperLst3                  => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[],Collection}
    mappersList                 => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{mapper=127.0.0.1:51000},{mapper=127.0.0.1:52000},{map
                                .. per=127.0.0.1:53000}],Collection}
    master                      => 127.0.0.1:40000
    me                          => 127.0.0.1:70000
    numOfShufflers              => 3
    numOfWords                  => 5
    openBuiltin                 => <function>
    openFile                    => <function>
    openSocket                  => <function>
    parseArgs                   => <function>
    peers                       => {CNS={},ANS={},DS=[],}
    processRole                 => <function>
    reduce                      => <trigger reduce >
    reducer                     => 127.0.0.1:70000
    register                    => <trigger register >
    registerFileCloseTrigger    => <function>
    registerFileDataTrigger     => <function>
    registerSocketAcceptTrigger => <function>
    registerSocketCloseTrigger  => <function>
    registerSocketDataTrigger   => <function>
    role                        => "go"
    shuffle1                    => <trigger shuffle1 >
    shuffle2                    => <trigger shuffle2 >
    shuffle3                    => <trigger shuffle3 >
    shufflersTable              => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{shuffler=127.0.0.1:61000,word="foo"},{shuffler=127.0.
                                .. 0.1:62000,word="bar"},{shuffler=127.0.0.1:63000,word="baz"}],Collectio
                                .. n}
    splitWordLst                => <trigger splitWordLst >
    test                        => 0
    totalNodes                  => 8
    wordMap                     => <trigger wordMap >
    wordTest                    => "foo"
    wordsList                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo"},{word="bar"},{word="baz"},{word="foo"},{w
                                .. ord="bar"}],Collection}
    wordsMap1                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="foo",count=0}],Collection}
    wordsMap2                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="bar",count=0}],Collection}
    wordsMap3                   => {CNS={peek=<function>,insert=<function>,delete=<function>,update=<func
                                .. tion>,combine=<function>,split=<function>,iterate=<function>,map=<func
                                .. tion>,filter=<function>,fold=<function>,groupBy=<function>,ext=<functi
                                .. on>},ANS={},DS=[{word="baz",count=0}],Collection}
  }
}


EVENT LOOP {
  Queues:
  fromList [(127.0.0.1:61000,[]),(127.0.0.1:51000,[]),(127.0.0.1:53000,[]),(127.0.0.1:63000,[]),(127.0.0.1:70000,[]),(127.0.0.1:40000,[]),(127.0.0.1:52000,[]),(127.0.0.1:62000,[])]
}


Terminated:

127.0.0.1:40000
  Status:
  VTuple []
  Environment:
    allMappersDone              => VBool False
    args                        => VTuple [VCollection <opaque>,VCollection <opaque>]
    atExit                      => VFunction <function>
    atInit                      => VFunction <function>
    close                       => VFunction <function>
    count                       => VInt 5
    count1                      => VInt 0
    count2                      => VInt 0
    count3                      => VInt 0
    countTest                   => VInt 0
    currNumShufflers            => VInt 0
    currNumWords                => VInt 0
    currentNodes                => VInt 8
    done                        => VBool False
    finalWordsMap               => VCollection <opaque>
    goProcess                   => VFunction <function>
    initDecls                   => VFunction <function>
    join                        => VTrigger <function>
    localLst                    => VCollection <opaque>
    mapperLst1                  => VCollection <opaque>
    mapperLst2                  => VCollection <opaque>
    mapperLst3                  => VCollection <opaque>
    mappersList                 => VCollection <opaque>
    master                      => VAddress 127.0.0.1:40000
    me                          => VAddress 127.0.0.1:40000
    numOfShufflers              => VInt 3
    numOfWords                  => VInt 5
    openBuiltin                 => VFunction <function>
    openFile                    => VFunction <function>
    openSocket                  => VFunction <function>
    parseArgs                   => VFunction <function>
    peers                       => VCollection <opaque>
    processRole                 => VFunction <function>
    reduce                      => VTrigger <function>
    reducer                     => VAddress 127.0.0.1:70000
    register                    => VTrigger <function>
    registerFileCloseTrigger    => VFunction <function>
    registerFileDataTrigger     => VFunction <function>
    registerSocketAcceptTrigger => VFunction <function>
    registerSocketCloseTrigger  => VFunction <function>
    registerSocketDataTrigger   => VFunction <function>
    role                        => VString "go"
    shuffle1                    => VTrigger <function>
    shuffle2                    => VTrigger <function>
    shuffle3                    => VTrigger <function>
    shufflersTable              => VCollection <opaque>
    splitWordLst                => VTrigger <function>
    test                        => VInt 0
    totalNodes                  => VInt 8
    wordMap                     => VTrigger <function>
    wordTest                    => VString "init"
    wordsList                   => VCollection <opaque>
    wordsMap1                   => VCollection <opaque>
    wordsMap2                   => VCollection <opaque>
    wordsMap3                   => VCollection <opaque>
  Annotations:
    [("Collection",[("ext",VFunction <function>),("groupBy",VFunction <function>),("fold",VFunction <function>),("filter",VFunction <function>),("map",VFunction <function>),("iterate",VFunction <function>),("split",VFunction <function>),("combine",VFunction <function>),("update",VFunction <function>),("delete",VFunction <function>),("insert",VFunction <function>),("peek",VFunction <function>)])]

127.0.0.1:51000
  Status:
  VTuple []
  Environment:
    allMappersDone              => VBool False
    args                        => VTuple [VCollection <opaque>,VCollection <opaque>]
    atExit                      => VFunction <function>
    atInit                      => VFunction <function>
    close                       => VFunction <function>
    count                       => VInt 0
    count1                      => VInt 0
    count2                      => VInt 0
    count3                      => VInt 0
    countTest                   => VInt 0
    currNumShufflers            => VInt 0
    currNumWords                => VInt 0
    currentNodes                => VInt 0
    done                        => VBool False
    finalWordsMap               => VCollection <opaque>
    goProcess                   => VFunction <function>
    initDecls                   => VFunction <function>
    join                        => VTrigger <function>
    localLst                    => VCollection <opaque>
    mapperLst1                  => VCollection <opaque>
    mapperLst2                  => VCollection <opaque>
    mapperLst3                  => VCollection <opaque>
    mappersList                 => VCollection <opaque>
    master                      => VAddress 127.0.0.1:40000
    me                          => VAddress 127.0.0.1:51000
    numOfShufflers              => VInt 3
    numOfWords                  => VInt 5
    openBuiltin                 => VFunction <function>
    openFile                    => VFunction <function>
    openSocket                  => VFunction <function>
    parseArgs                   => VFunction <function>
    peers                       => VCollection <opaque>
    processRole                 => VFunction <function>
    reduce                      => VTrigger <function>
    reducer                     => VAddress 127.0.0.1:70000
    register                    => VTrigger <function>
    registerFileCloseTrigger    => VFunction <function>
    registerFileDataTrigger     => VFunction <function>
    registerSocketAcceptTrigger => VFunction <function>
    registerSocketCloseTrigger  => VFunction <function>
    registerSocketDataTrigger   => VFunction <function>
    role                        => VString "go"
    shuffle1                    => VTrigger <function>
    shuffle2                    => VTrigger <function>
    shuffle3                    => VTrigger <function>
    shufflersTable              => VCollection <opaque>
    splitWordLst                => VTrigger <function>
    test                        => VInt 2
    totalNodes                  => VInt 8
    wordMap                     => VTrigger <function>
    wordTest                    => VString "init"
    wordsList                   => VCollection <opaque>
    wordsMap1                   => VCollection <opaque>
    wordsMap2                   => VCollection <opaque>
    wordsMap3                   => VCollection <opaque>
  Annotations:
    [("Collection",[("ext",VFunction <function>),("groupBy",VFunction <function>),("fold",VFunction <function>),("filter",VFunction <function>),("map",VFunction <function>),("iterate",VFunction <function>),("split",VFunction <function>),("combine",VFunction <function>),("update",VFunction <function>),("delete",VFunction <function>),("insert",VFunction <function>),("peek",VFunction <function>)])]

127.0.0.1:52000
  Status:
  VTuple []
  Environment:
    allMappersDone              => VBool False
    args                        => VTuple [VCollection <opaque>,VCollection <opaque>]
    atExit                      => VFunction <function>
    atInit                      => VFunction <function>
    close                       => VFunction <function>
    count                       => VInt 0
    count1                      => VInt 0
    count2                      => VInt 0
    count3                      => VInt 0
    countTest                   => VInt 0
    currNumShufflers            => VInt 0
    currNumWords                => VInt 0
    currentNodes                => VInt 0
    done                        => VBool False
    finalWordsMap               => VCollection <opaque>
    goProcess                   => VFunction <function>
    initDecls                   => VFunction <function>
    join                        => VTrigger <function>
    localLst                    => VCollection <opaque>
    mapperLst1                  => VCollection <opaque>
    mapperLst2                  => VCollection <opaque>
    mapperLst3                  => VCollection <opaque>
    mappersList                 => VCollection <opaque>
    master                      => VAddress 127.0.0.1:40000
    me                          => VAddress 127.0.0.1:52000
    numOfShufflers              => VInt 3
    numOfWords                  => VInt 5
    openBuiltin                 => VFunction <function>
    openFile                    => VFunction <function>
    openSocket                  => VFunction <function>
    parseArgs                   => VFunction <function>
    peers                       => VCollection <opaque>
    processRole                 => VFunction <function>
    reduce                      => VTrigger <function>
    reducer                     => VAddress 127.0.0.1:70000
    register                    => VTrigger <function>
    registerFileCloseTrigger    => VFunction <function>
    registerFileDataTrigger     => VFunction <function>
    registerSocketAcceptTrigger => VFunction <function>
    registerSocketCloseTrigger  => VFunction <function>
    registerSocketDataTrigger   => VFunction <function>
    role                        => VString "go"
    shuffle1                    => VTrigger <function>
    shuffle2                    => VTrigger <function>
    shuffle3                    => VTrigger <function>
    shufflersTable              => VCollection <opaque>
    splitWordLst                => VTrigger <function>
    test                        => VInt 2
    totalNodes                  => VInt 8
    wordMap                     => VTrigger <function>
    wordTest                    => VString "init"
    wordsList                   => VCollection <opaque>
    wordsMap1                   => VCollection <opaque>
    wordsMap2                   => VCollection <opaque>
    wordsMap3                   => VCollection <opaque>
  Annotations:
    [("Collection",[("ext",VFunction <function>),("groupBy",VFunction <function>),("fold",VFunction <function>),("filter",VFunction <function>),("map",VFunction <function>),("iterate",VFunction <function>),("split",VFunction <function>),("combine",VFunction <function>),("update",VFunction <function>),("delete",VFunction <function>),("insert",VFunction <function>),("peek",VFunction <function>)])]

127.0.0.1:53000
  Status:
  VTuple []
  Environment:
    allMappersDone              => VBool False
    args                        => VTuple [VCollection <opaque>,VCollection <opaque>]
    atExit                      => VFunction <function>
    atInit                      => VFunction <function>
    close                       => VFunction <function>
    count                       => VInt 0
    count1                      => VInt 0
    count2                      => VInt 0
    count3                      => VInt 0
    countTest                   => VInt 0
    currNumShufflers            => VInt 0
    currNumWords                => VInt 0
    currentNodes                => VInt 0
    done                        => VBool False
    finalWordsMap               => VCollection <opaque>
    goProcess                   => VFunction <function>
    initDecls                   => VFunction <function>
    join                        => VTrigger <function>
    localLst                    => VCollection <opaque>
    mapperLst1                  => VCollection <opaque>
    mapperLst2                  => VCollection <opaque>
    mapperLst3                  => VCollection <opaque>
    mappersList                 => VCollection <opaque>
    master                      => VAddress 127.0.0.1:40000
    me                          => VAddress 127.0.0.1:53000
    numOfShufflers              => VInt 3
    numOfWords                  => VInt 5
    openBuiltin                 => VFunction <function>
    openFile                    => VFunction <function>
    openSocket                  => VFunction <function>
    parseArgs                   => VFunction <function>
    peers                       => VCollection <opaque>
    processRole                 => VFunction <function>
    reduce                      => VTrigger <function>
    reducer                     => VAddress 127.0.0.1:70000
    register                    => VTrigger <function>
    registerFileCloseTrigger    => VFunction <function>
    registerFileDataTrigger     => VFunction <function>
    registerSocketAcceptTrigger => VFunction <function>
    registerSocketCloseTrigger  => VFunction <function>
    registerSocketDataTrigger   => VFunction <function>
    role                        => VString "go"
    shuffle1                    => VTrigger <function>
    shuffle2                    => VTrigger <function>
    shuffle3                    => VTrigger <function>
    shufflersTable              => VCollection <opaque>
    splitWordLst                => VTrigger <function>
    test                        => VInt 1
    totalNodes                  => VInt 8
    wordMap                     => VTrigger <function>
    wordTest                    => VString "init"
    wordsList                   => VCollection <opaque>
    wordsMap1                   => VCollection <opaque>
    wordsMap2                   => VCollection <opaque>
    wordsMap3                   => VCollection <opaque>
  Annotations:
    [("Collection",[("ext",VFunction <function>),("groupBy",VFunction <function>),("fold",VFunction <function>),("filter",VFunction <function>),("map",VFunction <function>),("iterate",VFunction <function>),("split",VFunction <function>),("combine",VFunction <function>),("update",VFunction <function>),("delete",VFunction <function>),("insert",VFunction <function>),("peek",VFunction <function>)])]

127.0.0.1:61000
  Status:
  VTuple []
  Environment:
    allMappersDone              => VBool False
    args                        => VTuple [VCollection <opaque>,VCollection <opaque>]
    atExit                      => VFunction <function>
    atInit                      => VFunction <function>
    close                       => VFunction <function>
    count                       => VInt 0
    count1                      => VInt 2
    count2                      => VInt 0
    count3                      => VInt 0
    countTest                   => VInt 0
    currNumShufflers            => VInt 0
    currNumWords                => VInt 5
    currentNodes                => VInt 0
    done                        => VBool False
    finalWordsMap               => VCollection <opaque>
    goProcess                   => VFunction <function>
    initDecls                   => VFunction <function>
    join                        => VTrigger <function>
    localLst                    => VCollection <opaque>
    mapperLst1                  => VCollection <opaque>
    mapperLst2                  => VCollection <opaque>
    mapperLst3                  => VCollection <opaque>
    mappersList                 => VCollection <opaque>
    master                      => VAddress 127.0.0.1:40000
    me                          => VAddress 127.0.0.1:61000
    numOfShufflers              => VInt 3
    numOfWords                  => VInt 5
    openBuiltin                 => VFunction <function>
    openFile                    => VFunction <function>
    openSocket                  => VFunction <function>
    parseArgs                   => VFunction <function>
    peers                       => VCollection <opaque>
    processRole                 => VFunction <function>
    reduce                      => VTrigger <function>
    reducer                     => VAddress 127.0.0.1:70000
    register                    => VTrigger <function>
    registerFileCloseTrigger    => VFunction <function>
    registerFileDataTrigger     => VFunction <function>
    registerSocketAcceptTrigger => VFunction <function>
    registerSocketCloseTrigger  => VFunction <function>
    registerSocketDataTrigger   => VFunction <function>
    role                        => VString "go"
    shuffle1                    => VTrigger <function>
    shuffle2                    => VTrigger <function>
    shuffle3                    => VTrigger <function>
    shufflersTable              => VCollection <opaque>
    splitWordLst                => VTrigger <function>
    test                        => VInt 0
    totalNodes                  => VInt 8
    wordMap                     => VTrigger <function>
    wordTest                    => VString "init"
    wordsList                   => VCollection <opaque>
    wordsMap1                   => VCollection <opaque>
    wordsMap2                   => VCollection <opaque>
    wordsMap3                   => VCollection <opaque>
  Annotations:
    [("Collection",[("ext",VFunction <function>),("groupBy",VFunction <function>),("fold",VFunction <function>),("filter",VFunction <function>),("map",VFunction <function>),("iterate",VFunction <function>),("split",VFunction <function>),("combine",VFunction <function>),("update",VFunction <function>),("delete",VFunction <function>),("insert",VFunction <function>),("peek",VFunction <function>)])]

127.0.0.1:62000
  Status:
  VTuple []
  Environment:
    allMappersDone              => VBool False
    args                        => VTuple [VCollection <opaque>,VCollection <opaque>]
    atExit                      => VFunction <function>
    atInit                      => VFunction <function>
    close                       => VFunction <function>
    count                       => VInt 0
    count1                      => VInt 0
    count2                      => VInt 2
    count3                      => VInt 0
    countTest                   => VInt 0
    currNumShufflers            => VInt 0
    currNumWords                => VInt 5
    currentNodes                => VInt 0
    done                        => VBool False
    finalWordsMap               => VCollection <opaque>
    goProcess                   => VFunction <function>
    initDecls                   => VFunction <function>
    join                        => VTrigger <function>
    localLst                    => VCollection <opaque>
    mapperLst1                  => VCollection <opaque>
    mapperLst2                  => VCollection <opaque>
    mapperLst3                  => VCollection <opaque>
    mappersList                 => VCollection <opaque>
    master                      => VAddress 127.0.0.1:40000
    me                          => VAddress 127.0.0.1:62000
    numOfShufflers              => VInt 3
    numOfWords                  => VInt 5
    openBuiltin                 => VFunction <function>
    openFile                    => VFunction <function>
    openSocket                  => VFunction <function>
    parseArgs                   => VFunction <function>
    peers                       => VCollection <opaque>
    processRole                 => VFunction <function>
    reduce                      => VTrigger <function>
    reducer                     => VAddress 127.0.0.1:70000
    register                    => VTrigger <function>
    registerFileCloseTrigger    => VFunction <function>
    registerFileDataTrigger     => VFunction <function>
    registerSocketAcceptTrigger => VFunction <function>
    registerSocketCloseTrigger  => VFunction <function>
    registerSocketDataTrigger   => VFunction <function>
    role                        => VString "go"
    shuffle1                    => VTrigger <function>
    shuffle2                    => VTrigger <function>
    shuffle3                    => VTrigger <function>
    shufflersTable              => VCollection <opaque>
    splitWordLst                => VTrigger <function>
    test                        => VInt 0
    totalNodes                  => VInt 8
    wordMap                     => VTrigger <function>
    wordTest                    => VString "init"
    wordsList                   => VCollection <opaque>
    wordsMap1                   => VCollection <opaque>
    wordsMap2                   => VCollection <opaque>
    wordsMap3                   => VCollection <opaque>
  Annotations:
    [("Collection",[("ext",VFunction <function>),("groupBy",VFunction <function>),("fold",VFunction <function>),("filter",VFunction <function>),("map",VFunction <function>),("iterate",VFunction <function>),("split",VFunction <function>),("combine",VFunction <function>),("update",VFunction <function>),("delete",VFunction <function>),("insert",VFunction <function>),("peek",VFunction <function>)])]

127.0.0.1:63000
  Status:
  VTuple []
  Environment:
    allMappersDone              => VBool False
    args                        => VTuple [VCollection <opaque>,VCollection <opaque>]
    atExit                      => VFunction <function>
    atInit                      => VFunction <function>
    close                       => VFunction <function>
    count                       => VInt 0
    count1                      => VInt 0
    count2                      => VInt 0
    count3                      => VInt 1
    countTest                   => VInt 0
    currNumShufflers            => VInt 0
    currNumWords                => VInt 5
    currentNodes                => VInt 0
    done                        => VBool False
    finalWordsMap               => VCollection <opaque>
    goProcess                   => VFunction <function>
    initDecls                   => VFunction <function>
    join                        => VTrigger <function>
    localLst                    => VCollection <opaque>
    mapperLst1                  => VCollection <opaque>
    mapperLst2                  => VCollection <opaque>
    mapperLst3                  => VCollection <opaque>
    mappersList                 => VCollection <opaque>
    master                      => VAddress 127.0.0.1:40000
    me                          => VAddress 127.0.0.1:63000
    numOfShufflers              => VInt 3
    numOfWords                  => VInt 5
    openBuiltin                 => VFunction <function>
    openFile                    => VFunction <function>
    openSocket                  => VFunction <function>
    parseArgs                   => VFunction <function>
    peers                       => VCollection <opaque>
    processRole                 => VFunction <function>
    reduce                      => VTrigger <function>
    reducer                     => VAddress 127.0.0.1:70000
    register                    => VTrigger <function>
    registerFileCloseTrigger    => VFunction <function>
    registerFileDataTrigger     => VFunction <function>
    registerSocketAcceptTrigger => VFunction <function>
    registerSocketCloseTrigger  => VFunction <function>
    registerSocketDataTrigger   => VFunction <function>
    role                        => VString "go"
    shuffle1                    => VTrigger <function>
    shuffle2                    => VTrigger <function>
    shuffle3                    => VTrigger <function>
    shufflersTable              => VCollection <opaque>
    splitWordLst                => VTrigger <function>
    test                        => VInt 0
    totalNodes                  => VInt 8
    wordMap                     => VTrigger <function>
    wordTest                    => VString "init"
    wordsList                   => VCollection <opaque>
    wordsMap1                   => VCollection <opaque>
    wordsMap2                   => VCollection <opaque>
    wordsMap3                   => VCollection <opaque>
  Annotations:
    [("Collection",[("ext",VFunction <function>),("groupBy",VFunction <function>),("fold",VFunction <function>),("filter",VFunction <function>),("map",VFunction <function>),("iterate",VFunction <function>),("split",VFunction <function>),("combine",VFunction <function>),("update",VFunction <function>),("delete",VFunction <function>),("insert",VFunction <function>),("peek",VFunction <function>)])]

127.0.0.1:70000
  Status:
  VTuple []
  Environment:
    allMappersDone              => VBool False
    args                        => VTuple [VCollection <opaque>,VCollection <opaque>]
    atExit                      => VFunction <function>
    atInit                      => VFunction <function>
    close                       => VFunction <function>
    count                       => VInt 0
    count1                      => VInt 0
    count2                      => VInt 0
    count3                      => VInt 0
    countTest                   => VInt 2
    currNumShufflers            => VInt 3
    currNumWords                => VInt 0
    currentNodes                => VInt 0
    done                        => VBool True
    finalWordsMap               => VCollection <opaque>
    goProcess                   => VFunction <function>
    initDecls                   => VFunction <function>
    join                        => VTrigger <function>
    localLst                    => VCollection <opaque>
    mapperLst1                  => VCollection <opaque>
    mapperLst2                  => VCollection <opaque>
    mapperLst3                  => VCollection <opaque>
    mappersList                 => VCollection <opaque>
    master                      => VAddress 127.0.0.1:40000
    me                          => VAddress 127.0.0.1:70000
    numOfShufflers              => VInt 3
    numOfWords                  => VInt 5
    openBuiltin                 => VFunction <function>
    openFile                    => VFunction <function>
    openSocket                  => VFunction <function>
    parseArgs                   => VFunction <function>
    peers                       => VCollection <opaque>
    processRole                 => VFunction <function>
    reduce                      => VTrigger <function>
    reducer                     => VAddress 127.0.0.1:70000
    register                    => VTrigger <function>
    registerFileCloseTrigger    => VFunction <function>
    registerFileDataTrigger     => VFunction <function>
    registerSocketAcceptTrigger => VFunction <function>
    registerSocketCloseTrigger  => VFunction <function>
    registerSocketDataTrigger   => VFunction <function>
    role                        => VString "go"
    shuffle1                    => VTrigger <function>
    shuffle2                    => VTrigger <function>
    shuffle3                    => VTrigger <function>
    shufflersTable              => VCollection <opaque>
    splitWordLst                => VTrigger <function>
    test                        => VInt 0
    totalNodes                  => VInt 8
    wordMap                     => VTrigger <function>
    wordTest                    => VString "foo"
    wordsList                   => VCollection <opaque>
    wordsMap1                   => VCollection <opaque>
    wordsMap2                   => VCollection <opaque>
    wordsMap3                   => VCollection <opaque>
  Annotations:
    [("Collection",[("ext",VFunction <function>),("groupBy",VFunction <function>),("fold",VFunction <function>),("filter",VFunction <function>),("map",VFunction <function>),("iterate",VFunction <function>),("split",VFunction <function>),("combine",VFunction <function>),("update",VFunction <function>),("delete",VFunction <function>),("insert",VFunction <function>),("peek",VFunction <function>)])]

Finished.
Mode: Interpret
  Batch
    Network: False
    System environment:
    127.0.0.1:40000
      me   => Node {rootLabel = LAddress :@: [], subForest = [Node {rootLabel = LString "127.0.0.1" :@: [], subForest = []},Node {rootLabel = LInt 40000 :@: [], subForest = []}]}
      role => Node {rootLabel = LString "go" :@: [], subForest = []}
    127.0.0.1:51000
      me   => Node {rootLabel = LAddress :@: [], subForest = [Node {rootLabel = LString "127.0.0.1" :@: [], subForest = []},Node {rootLabel = LInt 51000 :@: [], subForest = []}]}
      role => Node {rootLabel = LString "go" :@: [], subForest = []}
    127.0.0.1:52000
      me   => Node {rootLabel = LAddress :@: [], subForest = [Node {rootLabel = LString "127.0.0.1" :@: [], subForest = []},Node {rootLabel = LInt 52000 :@: [], subForest = []}]}
      role => Node {rootLabel = LString "go" :@: [], subForest = []}
    127.0.0.1:53000
      me   => Node {rootLabel = LAddress :@: [], subForest = [Node {rootLabel = LString "127.0.0.1" :@: [], subForest = []},Node {rootLabel = LInt 53000 :@: [], subForest = []}]}
      role => Node {rootLabel = LString "go" :@: [], subForest = []}
    127.0.0.1:61000
      me   => Node {rootLabel = LAddress :@: [], subForest = [Node {rootLabel = LString "127.0.0.1" :@: [], subForest = []},Node {rootLabel = LInt 61000 :@: [], subForest = []}]}
      role => Node {rootLabel = LString "go" :@: [], subForest = []}
    127.0.0.1:62000
      me   => Node {rootLabel = LAddress :@: [], subForest = [Node {rootLabel = LString "127.0.0.1" :@: [], subForest = []},Node {rootLabel = LInt 62000 :@: [], subForest = []}]}
      role => Node {rootLabel = LString "go" :@: [], subForest = []}
    127.0.0.1:63000
      me   => Node {rootLabel = LAddress :@: [], subForest = [Node {rootLabel = LString "127.0.0.1" :@: [], subForest = []},Node {rootLabel = LInt 63000 :@: [], subForest = []}]}
      role => Node {rootLabel = LString "go" :@: [], subForest = []}
    127.0.0.1:70000
      me   => Node {rootLabel = LAddress :@: [], subForest = [Node {rootLabel = LString "127.0.0.1" :@: [], subForest = []},Node {rootLabel = LInt 70000 :@: [], subForest = []}]}
      role => Node {rootLabel = LString "go" :@: [], subForest = []}
    Expression: False

Verbosity: NullV
Input: "/home/chao/work/K3/K3-Core/examples/MapReduce/WordCount/MapReduceV2.k3"
