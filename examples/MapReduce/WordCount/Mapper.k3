/*
 * Mapper for word count
 * TODO test iterate method
 */

declare wordsList :      mut collection{ word : string } @ { Collection }
declare reducer :        immut address = 127.0.0.1:40000
declare wordsMap :       mut collection{ existingWord : string, count : int } @ { Collection }
// flag for indexing existing word
declare existing :       mut = false

trigger count : () = \_ -> (

  wordsList.iterate (\word -> 
    wordsMap.iterate (\wordTuple ->
      if word == wordTuple.existingWord
  	  then (count = count + 1;
  	        existing = true)
  	  else () 
    )
  	if existing == false
  	then wordsMap.insert{ existingWord : word, count : 1 }
  	else ()
  )

  (reduce, reducer) <- wordsMap 
  
)

source go : () = value ()

feed go |> init 
