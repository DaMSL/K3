include "Core/Builtins.k3"
include "Core/GPUBuiltins.k3"

declare devicecount : mut int = 0

declare modname : string = "test"

declare kernel : string =
                " __global__ "  ++                                                
                "void saxpy(float a, float *x, float *y, float *out, size_t n)   " ++
    		"{                                                               " ++
    		"  size_t tid = blockIdx.x * blockDim.x + threadIdx.x;           " ++
    		"  if (tid < n) {                                                " ++
    		"    out[tid] = a * x[tid] + y[tid];                             " ++
    		"  }                                                             " ++
    		"}                                                               "

declare transformer : string =
              " __global__ void " ++
              "transformer(const float *A, float *C, int numElements) " ++
              "{                                                      " ++
              "  int i = blockDim.x * blockIdx.x + threadIdx.x;       " ++
              "  if (i < numElements)                                 " ++
              "    C[i] = A[i] + 5.0;                                 " ++
              "}                                                      "

declare  ptx : mut string = ""

declare c  : collection {elem:int} @Vector
declare re : mut collection {elem:int} @Vector

trigger t : () = \_ -> (
   devicecount = get_device_count ();
   print ("GPU device count: " ++ (itos devicecount));
   device_info ();

   (ptx = (compile_to_ptx_str transformer modname));
   
   // build a vector
   ((range 10000).iterate (\r -> c.insert {elem: r.elem}));
   re = (transformer_gpu c modname "transformer" ptx 0)
   //print re  
)

source s1 : () = value ()
feed s1 |> t
