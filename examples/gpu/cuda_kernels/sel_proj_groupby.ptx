//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-19324607
// Cuda compilation tools, release 7.0, V7.0.27
// Based on LLVM 3.4svn
//

.version 4.2
.target sm_35
.address_size 64

	// .weak	cudaMalloc
// queryplan$__cuda_local_var_42290_35_non_const_sdata has been demoted

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaGetDevice
.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	queryplan
.visible .entry queryplan(
	.param .u64 queryplan_param_0,
	.param .u64 queryplan_param_1,
	.param .u32 queryplan_param_2
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<21>;
	.reg .s32 	%r<18>;
	.reg .s64 	%rd<15>;
	// demoted variable
	.shared .align 4 .b8 queryplan$__cuda_local_var_42290_35_non_const_sdata[1024];

	ld.param.u64 	%rd4, [queryplan_param_0];
	ld.param.u64 	%rd5, [queryplan_param_1];
	ld.param.u32 	%r8, [queryplan_param_2];
	cvta.to.global.u64 	%rd1, %rd5;
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r9, %r1, 9;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r9, %r2;
	cvta.to.global.u64 	%rd6, %rd4;
	mul.wide.u32 	%rd7, %r3, 12;
	add.s64 	%rd8, %rd6, %rd7;
	add.s64 	%rd2, %rd8, 8;
	mov.f32 	%f20, 0f00000000;
	setp.ge.u32	%p1, %r3, %r8;
	@%p1 bra 	BB6_2;

	ld.global.f32 	%f20, [%rd2];

BB6_2:
	add.s32 	%r10, %r3, 256;
	setp.ge.u32	%p2, %r10, %r8;
	@%p2 bra 	BB6_4;

	ld.global.f32 	%f14, [%rd2+3072];
	add.f32 	%f20, %f20, %f14;

BB6_4:
	mul.wide.u32 	%rd9, %r2, 4;
	mov.u64 	%rd10, queryplan$__cuda_local_var_42290_35_non_const_sdata;
	add.s64 	%rd3, %rd10, %rd9;
	st.shared.f32 	[%rd3], %f20;
	bar.sync 	0;
	bar.sync 	0;
	setp.gt.u32	%p3, %r2, 127;
	@%p3 bra 	BB6_6;

	ld.shared.f32 	%f15, [%rd3+512];
	add.f32 	%f20, %f20, %f15;
	st.shared.f32 	[%rd3], %f20;

BB6_6:
	bar.sync 	0;
	setp.gt.u32	%p4, %r2, 63;
	@%p4 bra 	BB6_8;

	ld.shared.f32 	%f16, [%rd3+256];
	add.f32 	%f20, %f20, %f16;
	st.shared.f32 	[%rd3], %f20;

BB6_8:
	bar.sync 	0;
	setp.gt.u32	%p5, %r2, 31;
	@%p5 bra 	BB6_11;

	ld.shared.f32 	%f17, [%rd3+128];
	add.f32 	%f20, %f20, %f17;
	mov.u32 	%r17, WARP_SZ;
	setp.lt.s32	%p6, %r17, 2;
	@%p6 bra 	BB6_11;

BB6_10:
	mov.u32 	%r5, %r17;
	shr.u32 	%r13, %r5, 31;
	add.s32 	%r14, %r5, %r13;
	shr.s32 	%r17, %r14, 1;
	mov.u32 	%r12, 31;
	// inline asm
	shfl.down.b32 %f18, %f20, %r17, %r12;
	// inline asm
	add.f32 	%f20, %f20, %f18;
	setp.gt.s32	%p7, %r5, 3;
	@%p7 bra 	BB6_10;

BB6_11:
	setp.eq.s32	%p8, %r2, 0;
	@%p8 bra 	BB6_14;

	mov.u32 	%r15, %ntid.x;
	mad.lo.s32 	%r7, %r15, %r1, %r2;
	setp.ge.u32	%p9, %r7, %r8;
	@%p9 bra 	BB6_15;

	mul.wide.s32 	%rd11, %r7, 4;
	add.s64 	%rd12, %rd1, %rd11;
	mov.u32 	%r16, 0;
	st.global.u32 	[%rd12], %r16;
	bra.uni 	BB6_15;

BB6_14:
	mul.wide.u32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd1, %rd13;
	st.global.f32 	[%rd14], %f20;

BB6_15:
	ret;
}


